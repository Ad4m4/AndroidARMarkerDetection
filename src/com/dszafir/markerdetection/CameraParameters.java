package com.dszafir.markerdetection;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.core.MatOfDouble;
import org.opencv.core.Size;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;


/**
 * Camera parameters (camera and distortion coefficient matrices). 
 * They will be loaded from an xml file which should match the output
 * of the OpenCV Camera Calibration program.
 * 
 * @author Dan Szafir, based on Aruco CameraParameters class by Rafael Ortega
 */
public class CameraParameters {

	// cameraMatrix will be of the form
	// | Fx 0  Cx |
	// | 0  Fy Cy |
	// | 0  0   1 |
	private double Fx,Fy,Cx,Cy;
	private double[] distortionMatrix;
	
	public CameraParameters(){
//		cameraMatrix = new Mat(3,3,CvType.CV_32FC1);
//		distortionMatrix = new MatOfDouble();
		setDistortionMatrix(new double[5]);
	}
	
	public CameraParameters(double Fx, double Fy, double Cx, double Cy, double[] distortionMatrix)
	{
		this.setFx(Fx);
		this.setFy(Fy);
		this.setCx(Cx);
		this.setCy(Cy);
		this.setDistortionMatrix(distortionMatrix);
	}
	
	public CameraParameters(String xmlFile) throws ParserConfigurationException, SAXException, IOException {
		this();
		readFromXML(xmlFile);
	}

	public Mat getCameraMatrix(){
		Mat cameraMatrix = new Mat(3,3,CvType.CV_32FC1);
		cameraMatrix.put(0, 0, 
				getFx(), 0, getCx(),
				0, getFy(), getCy(),
				0, 0, 1);
		
		return cameraMatrix;
	}
	
	public MatOfDouble getDistortionMatrixAsMat(){
		return new MatOfDouble(getDistortionMatrix());
	}
	
	/**
	 * Parses an xml camera configuration file expected to be of a format generated by 
	 * the OpenCV camera calibration program
	 * (http://docs.opencv.org/doc/tutorials/calib3d/camera_calibration/camera_calibration.html)
	 * @param filepath
	 * @throws ParserConfigurationException
	 * @throws SAXException
	 * @throws IOException
	 */
	private void readFromXML(String filepath) throws ParserConfigurationException, SAXException, IOException{
		File file = new File(filepath);
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		Document doc = dBuilder.parse(file);
		doc.getDocumentElement().normalize();
		
		NodeList nList = doc.getElementsByTagName("Camera_Matrix");
		Node node = nList.item(0);

		if (node.getNodeType() == Node.ELEMENT_NODE) {

			Element element = (Element) node;

			NodeList dataList = element.getElementsByTagName("data");
			Element dataElement = (Element)dataList.item(0);
			NodeList dataTextList = dataElement.getChildNodes();
			String data = ((Node)dataTextList.item(0)).getNodeValue().trim();

			StringTokenizer st = new StringTokenizer(data);
			double[] array = new double[9];
			int i = 0;
			while(st.hasMoreElements()){
				array[i] = Double.valueOf(st.nextToken());
				i++;
			}
			
			setFx(array[0]);
			setCx(array[2]);
			setFy(array[4]);
			setCy(array[5]);
		}
		
		nList = doc.getElementsByTagName("Distortion_Coefficients");
		node = nList.item(0);

		if (node.getNodeType() == Node.ELEMENT_NODE) {

			Element element = (Element) node;

			NodeList dataList = element.getElementsByTagName("data");
			Element dataElement = (Element)dataList.item(0);
			NodeList dataTextList = dataElement.getChildNodes();
			String data = ((Node)dataTextList.item(0)).getNodeValue().trim();
			
			StringTokenizer std = new StringTokenizer(data);
			List<Double> coeffs = new ArrayList<Double>();
			while(std.hasMoreElements()){
				coeffs.add(Double.valueOf(std.nextToken()));

			}
			for (int i = 0; i < coeffs.size() && i < getDistortionMatrix().length; ++i) {
				getDistortionMatrix()[i] = coeffs.get(i);
			}
		}
	}

	public double getFx() {
		return Fx;
	}

	public void setFx(double fx) {
		Fx = fx;
	}

	public double getFy() {
		return Fy;
	}

	public void setFy(double fy) {
		Fy = fy;
	}

	public double getCx() {
		return Cx;
	}

	public void setCx(double cx) {
		Cx = cx;
	}

	public double getCy() {
		return Cy;
	}

	public void setCy(double cy) {
		Cy = cy;
	}

	public double[] getDistortionMatrix() {
		return distortionMatrix;
	}

	public void setDistortionMatrix(double[] distortionMatrix) {
		this.distortionMatrix = distortionMatrix;
	}
}
